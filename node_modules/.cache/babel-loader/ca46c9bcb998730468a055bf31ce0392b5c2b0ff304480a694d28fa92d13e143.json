{"ast":null,"code":"var _jsxFileName = \"/Users/nyihtet/Desktop/persona/src/Rate.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Rate() {\n  _s();\n  const [count, setCount] = useState(0);\n  const [text, setText] = useState('');\n  const increment = () => {\n    setCount(count + 1);\n  };\n  const handleTextChange = event => {\n    setText(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Rate: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increment,\n      children: \" Give me some rating by tappin'\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: handleTextChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Reversed Text: \", text.split('').reverse().join(' ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(Rate, \"l09lhpEe3v6J7kKGeKuQbywhLUI=\");\n_c = Rate;\nexport default Rate;\nvar _c;\n$RefreshReg$(_c, \"Rate\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Rate","_s","count","setCount","text","setText","increment","handleTextChange","event","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","split","reverse","join","_c","$RefreshReg$"],"sources":["/Users/nyihtet/Desktop/persona/src/Rate.js"],"sourcesContent":["import React, {useState} from 'react';\n\nfunction Rate(){\n    const [count, setCount ] = useState(0);\n    const [text, setText ] = useState('');\n\n    const increment = () => {\n        setCount(count + 1);\n    }\n\n    const handleTextChange = (event) => {\n        setText(event.target.value);\n    }\n\n    return(\n        <div>\n            <p > Rate: {count}</p>\n            <button onClick={increment}> Give me some rating by tappin'</button>\n\n            <input type = \"text\" value = {text} onChange = {handleTextChange} />\n            <p> Reversed Text: {text.split('').reverse().join(' ')}</p>\n\n        </div>\n    );\n}\n\nexport default Rate;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EACX,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAE,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACtC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAE,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAErC,MAAMS,SAAS,GAAGA,CAAA,KAAM;IACpBH,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACvB,CAAC;EAED,MAAMK,gBAAgB,GAAIC,KAAK,IAAK;IAChCH,OAAO,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,oBACIX,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,GAAI,SAAO,EAACT,KAAK;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBhB,OAAA;MAAQiB,OAAO,EAAEV,SAAU;MAAAK,QAAA,EAAC;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEpEhB,OAAA;MAAOkB,IAAI,EAAG,MAAM;MAACP,KAAK,EAAIN,IAAK;MAACc,QAAQ,EAAIX;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpEhB,OAAA;MAAAY,QAAA,GAAG,kBAAgB,EAACP,IAAI,CAACe,KAAK,CAAC,EAAE,CAAC,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE1D,CAAC;AAEd;AAACd,EAAA,CAtBQD,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAwBb,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}